package application;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;

import java.util.ArrayList;
import java.util.List;

import com.jfoenix.controls.JFXButton;

import application.assets.modules.SendMail;
import application.assets.modules.Snackbar;
import dataAccess.AccountsDA;
import javafx.scene.control.TextField;
import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.event.ActionEvent;

import javafx.scene.control.TitledPane;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;

import javafx.scene.control.PasswordField;

import javafx.scene.input.MouseEvent;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;

import javafx.scene.layout.GridPane;
import javafx.util.Duration;

public class LRFViewController {
	@FXML private GridPane rootPane;
	@FXML private ImageView logoImageView;
	@FXML private TitledPane loginTitledPane;
	@FXML private TextField loginAdminNoTF;
	@FXML private PasswordField loginPassTF;
	@FXML private JFXButton loginBtn;
	@FXML private TitledPane regTitledPane;
	@FXML private TextField regNameTF;
	@FXML private TextField regAdminNoTF;
	@FXML private TextField regEmailTF;
	@FXML private PasswordField regPassTF;
	@FXML private JFXButton regBtn;
	@FXML private TitledPane fpassTitledPane;
	@FXML private TextField fpassAdminNoTF;
	@FXML private TextField fpassEmailTF;
	@FXML private JFXButton fpassBtn;
	
	@FXML
	public void initialize() {
		AccountsDA.initDA();
		
		//Re-Animate Sportaneous.gif
		Timeline timeline = new Timeline();
		timeline.getKeyFrames().add(new KeyFrame(Duration.millis(1000), ae -> logoImageView.setImage(new Image(this.getClass().getResource("/application/assets/img/Sportaneous.gif").toExternalForm()))));
		timeline.play();
	}
	
	// Event Listener on PasswordField[#loginPassTF] & [#loginAdminNoTF].onKeyPressed
	@FXML
	public void loginTxtFieldOnKeyPress(KeyEvent event) {
		if (event.getCode().equals(KeyCode.ENTER)) {
			login();
		}
	}
	
	// Event Listener on JFXButton[#loginBtn].onAction
	@FXML
	public void loginBtnOnAction(ActionEvent event) {
		login();
	}
	
	// Event Listener on TextField[#regNameTF], [#regAdminNoTF], [#regEmailTF], [#regPassTF].onKeyPressed
	@FXML
	public void regTxtFieldOnKeyPress(KeyEvent event) {
		// TODO Autogenerated
	}
	
	// Event Listener on JFXButton[#regBtn].onAction
	@FXML
	public void regBtnOnAction(ActionEvent event) {
		register();
	}
	
	// Event Listener on TextField[#fpassAdminNoTF], [#fpassEmailTF].onKeyPressed
	@FXML
	public void fpassOnKeyPress(KeyEvent event) {
		// TODO Autogenerated
	}
	
	// Event Listener on JFXButton[#fpassBtn].onAction
	@FXML
	public void fpassBtnOnAction(ActionEvent event) {
		// TODO Autogenerated
	}
	
	// Event Listener on TitledPane[#loginTitledPane].onMouseClicked
	@FXML
	public void loginTitledPaneOnClick(MouseEvent event) {
		if (fpassTitledPane.isExpanded()) {
			fpassTitledPane.getStyleClass().add("inactive");
		}
		else {
			fpassTitledPane.getStyleClass().remove("inactive");
		}
	}
	
	// Event Listener on TitledPane[#regTitledPane].onMouseClicked
	@FXML
	public void regTitledPaneOnClick(MouseEvent event) {
		if (fpassTitledPane.isExpanded()) {
			fpassTitledPane.getStyleClass().add("inactive");
		}
		else {
			fpassTitledPane.getStyleClass().remove("inactive");
		}
	}
	
	// Event Listener on TitledPane[#fpassTitledPane].onMouseClicked
	@FXML
	public void fpassTitledPaneOnClick(MouseEvent event) {
		if (fpassTitledPane.isExpanded()) {
			fpassTitledPane.getStyleClass().add("inactive");
		}
		else {
			fpassTitledPane.getStyleClass().remove("inactive");
		}
	}
	
	private void login() {
		String adminNo = loginAdminNoTF.getText();
		String pass = loginPassTF.getText();
		
		switch (AccountsDA.login(adminNo, pass)) {
			case 0:
				try {
					Main.setLoc(getClass().getResource("/application/ProfileView.fxml"));
					Main.getRoot().setCenter(FXMLLoader.load(Main.getLoc()));
					Main.getRoot().setBottom(FXMLLoader.load(getClass().getResource("/application/NavigationView.fxml")));
				}
				catch (Exception e) {
					e.printStackTrace();
				}
				break;
				
			case 1:
				if (adminNo.isEmpty() && pass.isEmpty()) {
					Snackbar.danger(rootPane, "Admin Number & Password field is empty.");
					loginAdminNoTF.getStyleClass().add("danger");
					loginPassTF.getStyleClass().add("danger");
				}
				else if (adminNo.isEmpty()) {
					Snackbar.danger(rootPane, "Admin Number field is empty.");
					loginAdminNoTF.getStyleClass().add("danger");
					loginPassTF.getStyleClass().removeAll("danger");
				}
				else if (pass.isEmpty()) {
					Snackbar.danger(rootPane, "Password field is empty.");
					loginPassTF.getStyleClass().add("danger");
					loginAdminNoTF.getStyleClass().removeAll("danger");
				}
				else {
					loginAdminNoTF.getStyleClass().removeAll("danger");
					loginPassTF.getStyleClass().removeAll("danger");
				}
				break;
				
			case 2:
				Snackbar.danger(rootPane, "This account does not exist, please register an account instead.");
				break;
				
			case 3:
				Snackbar.danger(rootPane, "The login credential you have entered is invalid.");
				break;
	
			default:
				break;
		}
	}
	
	private void register() {
		String name = regNameTF.getText();
		String adminNo = regAdminNoTF.getText();
		String email = regEmailTF.getText();
		String pass = regPassTF.getText();
		String msg = "";
		List<String> emptyMsg = new ArrayList<>();
		
		regNameTF.getStyleClass().removeAll("danger");
		regAdminNoTF.getStyleClass().removeAll("danger");
		regEmailTF.getStyleClass().removeAll("danger");
		regPassTF.getStyleClass().removeAll("danger");
		
		switch(AccountsDA.addAccount(name, adminNo, email, pass)) {
			case 0:
				String body = "You have registered an account with Sportaneous successfully.<br /><br />"
								+ "Your account details are as follow:<br />"
								+ "<strong>Username / Admin No.: </strong>" + adminNo + "<br />"
								+ "<strong>Password: </strong>" + pass;
				
				new SendMail().send(email, "[Sportaneous] Account Registered Successfully", body);
				Snackbar.success(rootPane, "You have registered an account with us successfully.");
				break;
				
			case 1:
				if (name.isEmpty()) {
					regNameTF.getStyleClass().add("danger");
					emptyMsg.add("Name");
				}
				
				if(email.isEmpty()) {
					regEmailTF.getStyleClass().add("danger");
					emptyMsg.add("Email");
				}
				
				if (adminNo.isEmpty()) {
					regAdminNoTF.getStyleClass().add("danger");
					emptyMsg.add("Admin Number");
				}
				
				if (pass.isEmpty()) {
					regPassTF.getStyleClass().add("danger");
					emptyMsg.add("Password");
				}
				
				// Build empty field name message.
				for (int i = 0; i < emptyMsg.size(); i++) {
					msg += emptyMsg.get(i);
					
					if (i < emptyMsg.size() - 1) {
						msg += ", ";
					}
				}
				
				Snackbar.danger(rootPane, msg + " field is empty.");
				break;
				
			case 2:
				Snackbar.danger(rootPane, "Only NYP email address are allowed to register an account with us.");
				break;
				
			case 3:
				Snackbar.danger(rootPane, "This email address is registered with us.");
				break;
				
			case 4:
				Snackbar.danger(rootPane, "This admin number is registered with us.");
				break;
		}
	}
}
